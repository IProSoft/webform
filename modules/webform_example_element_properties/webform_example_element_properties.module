<?php

/**
 * @file
 * Provides an example that shows how to add custom properties to Webform elements.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_webform_element_configuration_form_alter().
 */
function webform_example_element_properties_webform_element_configuration_form_alter(&$form, FormStateInterface $form_state) {
  // If you want add element properties to specific element type, you can use
  // the below code to the current element's type and more.
  /** @var Drupal\webform_ui\Form\WebformUiElementEditForm $form_object */
  $form_object = $form_state->getFormObject();
  $element_plugin = $form_object->getWebformElementPlugin();
  $element_label = $element_plugin->getPluginLabel();
  $element_type = $element_plugin->getTypeName();

  // Define default custom properties.
  // @todo Add hook_webform_element_default_ properties_alter().
  $custom_default_properties = [
    'custom_data' => '',
  ];

  // Append the $default_custom_properties to $element_properties so that the
  // custom property is displayed.
  // @see \Drupal\webform\Plugin\WebformElementBase::setConfigurationFormDefaultValueRecursive
  $form_state->set(
    'element_properties',
    $form_state->get('element_properties') + $custom_default_properties
  );

  // Append the $default_custom_properties to $default_properties stored in the
  // webform's state. This allows default custom properties to be removed when the
  // webform is submitted. If this is omitted, custom properties will always
  // be append to the element's properties.
  // @see \Drupal\webform\Plugin\WebformElementBase::getConfigurationFormProperties
  $form_state->set(
    'default_properties',
    $form_state->get('default_properties') + $custom_default_properties
  );

  // Append custom properties details container and textfield element.
  $t_args = [
    '@label'=> $element_label,
    '@type' => $element_type,
  ];
  $form['custom_properties'] = [
    '#type' => 'details',
    '#title' => t('Custom properties'),
    '#description' => t('The below custom properties are provided and managed by the webform_example_element_properties.module.'),
    '#open' => TRUE,
    // Add custom properties after all fieldset elements, which have a
    // weight of -20.
    // @see \Drupal\webform\Plugin\WebformElementBase::buildConfigurationForm
    '#weight' => -10,
  ];
  $form['custom_properties']['custom_data'] = [
    '#type' => 'textfield',
    '#title' => t('Custom data'),
    '#description' => t("The custom data value will be added to @label (@type) data-* attributes.", $t_args),
  ];
}

/**
 * Implements hook_webform_element_alter().
 */
function webform_example_element_properties_webform_element_alter(array &$element, FormStateInterface $form_state, array $context) {
  // Add data-custom to the element's attributes.
  if (!empty($element['#custom_data'])) {
    $element['#attributes']['data-custom'] = $element['#custom_data'];
  }
}
