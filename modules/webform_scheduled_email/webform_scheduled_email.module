<?php

use Drupal\Core\Hook\Attribute\LegacyHook;
use Drupal\webform_scheduled_email\Hook\WebformScheduledEmailHooks;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\webform\WebformInterface;
use Drupal\webform\WebformSubmissionInterface;

/**
 * Implements hook_config_schema_info_alter().
 */
#[LegacyHook]
function webform_scheduled_email_config_schema_info_alter(&$definitions) {
  \Drupal::service(WebformScheduledEmailHooks::class)->configSchemaInfoAlter($definitions);
}

/**
 * Implements hook_entity_update().
 */
#[LegacyHook]
function webform_scheduled_email_entity_update(EntityInterface $entity)
{
    \Drupal::service(WebformScheduledEmailHooks::class)->entityUpdate($entity);
}

/**
 * Implements hook_entity_predelete().
 */
#[LegacyHook]
function webform_scheduled_email_entity_predelete(EntityInterface $entity)
{
    \Drupal::service(WebformScheduledEmailHooks::class)->entityPredelete($entity);
}

/**
 * Implements hook_ENTITY_TYPE_delete() for webform entities.
 */
#[LegacyHook]
function webform_scheduled_email_webform_delete(WebformInterface $webform)
{
    \Drupal::service(WebformScheduledEmailHooks::class)->webformDelete($webform);
}

/**
 * Implements hook_ENTITY_TYPE_delete() for webform_submission entities.
 */
#[LegacyHook]
function webform_scheduled_email_webform_submission_delete(WebformSubmissionInterface $webform_submission)
{
    \Drupal::service(WebformScheduledEmailHooks::class)->webformSubmissionDelete($webform_submission);
}

/**
 * Implements hook_cron().
 */
#[LegacyHook]
function webform_scheduled_email_cron()
{
    \Drupal::service(WebformScheduledEmailHooks::class)->cron();
}

/**
 * Implements hook_theme().
 */
#[LegacyHook]
function webform_scheduled_email_theme() {
  return \Drupal::service(WebformScheduledEmailHooks::class)->theme();
}

/**
 * Implements hook_form_FORM_ID_alter() for webform admin config handlers form.
 */
#[LegacyHook]
function webform_scheduled_email_form_webform_admin_config_handlers_form_alter(&$form, FormStateInterface $form_state)
{
    \Drupal::service(WebformScheduledEmailHooks::class)->formWebformAdminConfigHandlersFormAlter($form, $form_state);
}

/**
 * Submit callback for Scheduled email settings.
 */
function _webform_scheduled_email_form_webform_admin_config_handlers_form_submit(&$form, FormStateInterface $form_state) {
  $values = $form_state->getValue('webform_scheduled_email');
  \Drupal::configFactory()
    ->getEditable('webform_scheduled_email.settings')
    ->set('schedule_type', $values['schedule_type'])
    ->save();
}
